{
    "Module": {
        "prefix": "module",
        "body": [
            "${1:GLOBAL }DEF ${2:name}(${3:params})",
            "\t$0",
            "END"
        ],
        "description": "Module"
    },
    "Function": {
        "prefix": "function",
        "body": [
            "${1:GLOBAL }DEFFCT ${2:type} ${3:name}(${4:params})",
            "\t$0",
            "ENDFCT"
        ],
        "description": "Function"
    },
    "For loop": {
        "prefix": "for",
        "body": [
            "FOR ${1:counter}=${2:start} TO ${3:end}${4: STEP step}",
            "\t$0",
            "ENDFOR"
        ],
        "description": "For loop"
    },
    "While loop": {
        "prefix": "while",
        "body": [
            "WHILE (${1:condition})",
            "\t$0",
            "ENDWHILE"
        ],
        "description": "While loop"
    },
    "If statement": {
        "prefix": "if",
        "body": [
            "IF (${1:condition}) THEN",
            "\t$0",
            "ENDIF"
        ],
        "description": "If statement"
    },
    "Switch statement": {
        "prefix": "switch",
        "body": [
            "SWITCH (${1:variable})",
            "CASE ${2:switch}",
            "\t$0",
            "DEFAULT",
            "ENDSWITCH"
        ],
        "description": "Switch statement"
    },
    "Interrupt declaration": {
        "prefix": "interrupt",
        "body": [
            "${1:GLOBAL }INTERRUPT DECL ${2:priority} WHEN ${3:trigger} DO ${4:event}"
        ],
        "description": "Interrupt declaration"
    },
    "Trigger when distance": {
        "prefix": "trigger when distance",
        "body": [
            "TRIGGER WHEN DISTANCE=${1:position} DELAY=${2:delay} DO ${3:event}${4: PRIO=-1}"
        ],
        "description": "Trigger when distance"
    },
    "Trigger when path": {
        "prefix": "trigger when path",
        "body": [
            "TRIGGER WHEN PATH=${1:distance} ${2:ONSTART} DELAY=${3:delay} DO ${4:event}${5: PRIO=-1}"
        ],
        "description": "Trigger when path"
    }
}